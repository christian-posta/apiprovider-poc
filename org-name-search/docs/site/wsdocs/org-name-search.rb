#
# 
#
# Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
#
require 'json'

# adding necessary json serialization methods to standard classes.
class Object
  def to_jaxb_json_hash
    return self
  end
  def self.from_json o
    return o
  end
end

class String
  def self.from_json o
    return o
  end
end

class Boolean
  def self.from_json o
    return o
  end
end

class Numeric
  def self.from_json o
    return o
  end
end

class Time
  #json time is represented as number of milliseconds since epoch
  def to_jaxb_json_hash
    return (to_i * 1000) + (usec / 1000)
  end
  def self.from_json o
    if o.nil?
      return nil
    else
      return Time.at(o / 1000, (o % 1000) * 1000)
    end
  end
end

class Array
  def to_jaxb_json_hash
    a = Array.new
    each { | _item | a.push _item.to_jaxb_json_hash }
    return a
  end
end

class Hash
  def to_jaxb_json_hash
    h = Hash.new
    each { | _key, _value | h[_key.to_jaxb_json_hash] = _value.to_jaxb_json_hash }
    return h
  end
end


module Com

module Redhat

module Examples

module Models

  # 
  class Organizations 

    # (no documentation provided)
    attr_accessor :organizationList

    # the json hash for this Organizations
    def to_jaxb_json_hash
      _h = {}
      if !organizationList.nil?
        _ha = Array.new
        organizationList.each { | _item | _ha.push _item.to_jaxb_json_hash }
        _h['organizations'] = _ha
      end
      return _h
    end

    # the json (string form) for this Organizations
    def to_json
      to_jaxb_json_hash.to_json
    end

    #initializes this Organizations with a json hash
    def init_jaxb_json_hash(_o)
      if !_o['organizations'].nil?
        @organizationList = Array.new
        _oa = _o['organizations']
        _oa.each { | _item | @organizationList.push Com::Redhat::Examples::Models::Organization.from_json(_item) }
      end
    end

    # constructs a Organizations from a (parsed) JSON hash
    def self.from_json(o)
      if o.nil?
        return nil
      else
        inst = new
        inst.init_jaxb_json_hash o
        return inst
      end
    end
  end

end

end

end

end

module Com

module Redhat

module Examples

module Models

  # 
  class PageResponse 

    # (no documentation provided)
    attr_accessor :content
    # (no documentation provided)
    attr_accessor :totalElements
    # (no documentation provided)
    attr_accessor :totalPages

    # the json hash for this PageResponse
    def to_jaxb_json_hash
      _h = {}
      _h['content'] = content.to_jaxb_json_hash unless content.nil?
      _h['totalElements'] = totalElements.to_jaxb_json_hash unless totalElements.nil?
      _h['totalPages'] = totalPages.to_jaxb_json_hash unless totalPages.nil?
      return _h
    end

    # the json (string form) for this PageResponse
    def to_json
      to_jaxb_json_hash.to_json
    end

    #initializes this PageResponse with a json hash
    def init_jaxb_json_hash(_o)
      @content = Object.from_json(_o['content']) unless _o['content'].nil?
      @totalElements = Bignum.from_json(_o['totalElements']) unless _o['totalElements'].nil?
      @totalPages = Fixnum.from_json(_o['totalPages']) unless _o['totalPages'].nil?
    end

    # constructs a PageResponse from a (parsed) JSON hash
    def self.from_json(o)
      if o.nil?
        return nil
      else
        inst = new
        inst.init_jaxb_json_hash o
        return inst
      end
    end
  end

end

end

end

end

module Com

module Redhat

module Examples

module Models

  # 
  class Organization 

    # (no documentation provided)
    attr_accessor :id
    # (no documentation provided)
    attr_accessor :orgId
    # (no documentation provided)
    attr_accessor :orgName

    # the json hash for this Organization
    def to_jaxb_json_hash
      _h = {}
      _h['id'] = id.to_jaxb_json_hash unless id.nil?
      _h['orgId'] = orgId.to_jaxb_json_hash unless orgId.nil?
      _h['orgName'] = orgName.to_jaxb_json_hash unless orgName.nil?
      return _h
    end

    # the json (string form) for this Organization
    def to_json
      to_jaxb_json_hash.to_json
    end

    #initializes this Organization with a json hash
    def init_jaxb_json_hash(_o)
      @id = Bignum.from_json(_o['id']) unless _o['id'].nil?
      @orgId = Fixnum.from_json(_o['orgId']) unless _o['orgId'].nil?
      @orgName = String.from_json(_o['orgName']) unless _o['orgName'].nil?
    end

    # constructs a Organization from a (parsed) JSON hash
    def self.from_json(o)
      if o.nil?
        return nil
      else
        inst = new
        inst.init_jaxb_json_hash o
        return inst
      end
    end
  end

end

end

end

end

module Com

module Redhat

module Examples

module Models

  # 
  class OrganizationPages < Com::Redhat::Examples::Models::PageResponse 


    # the json hash for this OrganizationPages
    def to_jaxb_json_hash
      _h = super
      return _h
    end

    #initializes this OrganizationPages with a json hash
    def init_jaxb_json_hash(_o)
      super _o
    end

    # constructs a OrganizationPages from a (parsed) JSON hash
    def self.from_json(o)
      if o.nil?
        return nil
      else
        inst = new
        inst.init_jaxb_json_hash o
        return inst
      end
    end
  end

end

end

end

end
